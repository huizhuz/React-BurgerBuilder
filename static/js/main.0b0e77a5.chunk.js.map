{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/UI/Input/Input.css","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","components/Layout/Layout.css","components/Navigation/Toolbar/Toolbar.css","assets/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","containers/Orders/Order/Order.css","hoc/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-order.js","components/UI/Spinner/Spinner.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","containers/Orders/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","toolbar","Toolbar","onClick","open","Backdrop","show","hide","sideDrawer","attachedClasses","SideDrawer","Open","Close","Aux","close","join","style","height","display","flexDirection","justifyContent","Layout","state","showSideDrawer","closeDrawer","setState","openDrawer","this","Mainview","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","withRouter","obToArrIngredients","Object","entries","ingredients","arrIngredientsFull","i","length","j","push","ingredientsToShow","map","eachIngredient","index","key","Burger","buildControl","BuildControl","Label","label","Less","removing","disabled","More","adding","controls","buildControls","BuildControls","price","each","disabledInfo","OrderButton","canOrder","ordering","modal","nextProps","nextState","Modal","transform","opacity","button","Button","btnType","clicked","orderSummary","ingredientSummary","keys","cancel","continue","instance","axios","create","baseURL","spinner","Loader","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","totalPrice","loading","addIngredient","updatedCount","updatedIngredients","priceAddition","newPrice","updateCanOrder","removeIngredient","oldCount","priceDeduction","sum","reduce","eachQuantity","order","queryParams","encodeURIComponent","queryString","history","pathname","search","get","then","res","data","burger","OrderSummary","checkoutSummary","CheckoutSummary","width","margin","input","inputElement","elementType","onChange","changed","InputElement","elementConfig","value","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","address","zipcode","country","email","deliverMethod","inputChanged","event","inputIdentifier","updatedOrderForm","updatedForm","target","orderHandler","preventDefault","formData","formElementName","orderData","post","catch","err","formElementsArray","id","config","form","onSubmit","formElement","Checkout","goBack","replace","query","parse","location","path","match","render","Order","ingredientsObject","ig","amount","textTransform","border","padding","Orders","orders","fetchedOrders","App","component","Boolean","window","hostname","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0b0e77a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom___HuxZP\",\"BreadTop\":\"BurgerIngredient__BreadTop___10-cT\",\"Seeds1\":\"BurgerIngredient__Seeds1___3xHtz\",\"Seeds2\":\"BurgerIngredient__Seeds2___1cUso\",\"Meat\":\"BurgerIngredient__Meat___13nAN\",\"Cheese\":\"BurgerIngredient__Cheese___1FxeY\",\"Salad\":\"BurgerIngredient__Salad___1iTJE\",\"Bacon\":\"BurgerIngredient__Bacon___3vrAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input___s67N0\",\"Label\":\"Input__Label____n-1m\",\"InputElement\":\"Input__InputElement___2-aFx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer___21TuB\",\"Open\":\"SideDrawer__Open___1pVYR\",\"Close\":\"SideDrawer__Close___3Yv1l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl___1jYc3\",\"Label\":\"BuildControl__Label___33Z-p\",\"Less\":\"BuildControl__Less___377MJ\",\"More\":\"BuildControl__More___28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem___23bcu\",\"active\":\"NavigationItem__active___2zJdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls___3_01f\",\"OrderButton\":\"BuildControls__OrderButton___myBwT\",\"enable\":\"BuildControls__enable___3jYIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button___QI7b2\",\"Success\":\"Button__Success___2dHUt\",\"Danger\":\"Button__Danger___2xnhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Mainview\":\"Layout__Mainview___1KtJY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar___2JJW-\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo___19WaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems____yd_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop___efy1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger___3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal___32_-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader___1DDwY\",\"load6\":\"Spinner__load6___3S2CE\",\"round\":\"Spinner__round___2qdnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary___1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData___1J81r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order___QOQo_\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react'\nimport burgerLogo from '../../assets/burger-logo.png'\nimport classes from './Logo.css'\n\nconst logo = ()=>{\n    return(\n        <div className={classes.Logo}>\n            <img src={burgerLogo} alt=\"Burger Logo\"/>\n        </div>\n    )\n}\nexport default logo","import React from 'react'\nimport { NavLink } from 'react-router-dom' \nimport classes from './NavigationItem.css'\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink \n            to={props.link}\n            exact\n            activeClassName={classes.active}>{props.children}</NavLink>\n    </li>\n)\nexport default navigationItem","import React from 'react'\nimport classes from './NavigationItems.css'\nimport NavigationItem from './NavigationItem/NavigationItem'\n\nconst navigationItems=() => {\n    return (\n        <ul className={classes.NavigationItems}>\n            <NavigationItem link=\"/React-BurgerBuilder/\">Burger Builder</NavigationItem>\n            <NavigationItem link=\"/React-BurgerBuilder/orders\">Orders</NavigationItem>\n        </ul>\n    ) \n}\n\nexport default navigationItems","import React from 'react'\nimport classes from './Toolbar.css'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../../Navigation/NavigationItems/NavigationItems'\n\nconst toolbar = (props) => {\n    return (\n        <header className={classes.Toolbar}>\n            <div onClick={props.open}>MENU</div>\n            <Logo />\n            <nav>\n                <NavigationItems></NavigationItems>\n            </nav>\n\n        </header>\n    )\n}\n\nexport default toolbar","import React from 'react'\nimport classes from './Backdrop.css'\n\nconst Backdrop = (props)=>{\n    return(\n        props.show ? <div className={classes.Backdrop} onClick={props.hide}></div> : null\n    )\n}\nexport default Backdrop","import React from 'react'\nimport Logo from '../../Logo/Logo.js'\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.css'\nimport Backdrop from '../../UI/Backdrop/Backdrop'\nimport Aux from '../../../hoc/Aux'\n\nconst sideDrawer = (props) => {\n    let attachedClasses=[]\n    if(props.open){\n        attachedClasses = [classes.SideDrawer, classes.Open]\n    } else{\n        attachedClasses=[classes.SideDrawer, classes.Close]\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} hide={props.close}></Backdrop>\n            <div className={attachedClasses.join(' ')}>\n                <div style={{ height: 12 + '%', display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                    <Logo></Logo>\n                </div>\n                <NavigationItems></NavigationItems>\n            </div>\n        </Aux>\n    )\n}\n\nexport default sideDrawer","// wrapper\nimport React, { Component } from 'react'\nimport Aux from '../../hoc/Aux'\nimport classes from './Layout.css'\nimport Toolbar from '../Navigation/Toolbar/Toolbar'\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer'\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer : false,\n    }\n    closeDrawer = () => {\n        this.setState({showSideDrawer: false})\n\n    }\n    openDrawer = ()=> {\n        this.setState({showSideDrawer: true})\n    }\n    render() {\n        return (\n            <Aux>\n                <Toolbar open={this.openDrawer}></Toolbar>\n                <SideDrawer open={this.state.showSideDrawer} close={this.closeDrawer}></SideDrawer>\n                <main className={classes.Mainview}>\n                    {this.props.children}\n                    {/* display whatever is <Layout>'s children, which is anything between the opening and closing tags  */}\n                </main>\n            </Aux>\n        )\n    }\n}\n\nexport default Layout;","import React, { Component } from 'react'\nimport classes from './BurgerIngredient.css'\nimport PropTypes from 'prop-types'\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null;\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                )\n                break;\n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>;\n                break;\n            case ('cheese'):\n                ingredient = <div className={classes.Cheese}></div>;\n                break;\n            case ('salad'):\n                ingredient = <div className={classes.Salad}></div>;\n                break;\n            case ('bacon'):\n                ingredient = <div className={classes.Bacon}></div>;\n                break;\n            default:\n                ingredient = null;\n        }\n        return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React from 'react'\nimport {withRouter} from 'react-router-dom'\nimport classes from './Burger.css'\nimport BurgerIngredient from '../Burger/BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    const obToArrIngredients = Object.entries(props.ingredients);\n    let arrIngredientsFull = [];\n    for (let i = 0; i < obToArrIngredients.length; i++) {\n        for (let j = 0; j < obToArrIngredients[i][1]; j++) {\n            arrIngredientsFull.push(obToArrIngredients[i][0]);\n        }\n    }\n    let ingredientsToShow = arrIngredientsFull.map((eachIngredient, index) => {\n        return <BurgerIngredient key={index} type={eachIngredient}></BurgerIngredient>\n    })\n    if(ingredientsToShow.length === 0){\n        ingredientsToShow = <p>Please start adding ingredients</p>\n    }\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\"></BurgerIngredient>\n            {ingredientsToShow}\n            <BurgerIngredient type=\"bread-bottom\"></BurgerIngredient>\n        </div>\n    )\n}\n\nexport default withRouter(burger)","import React from 'react'\nimport classes from './BuildControl.css'\n\nconst buildControl = (props) => {\n    return(\n        <div className={classes.BuildControl}>\n            <div className={classes.Label}>{props.label}</div>\n            <button className={classes.Less} onClick={props.removing} disabled={props.disabled}>Less</button>\n            <button className={classes.More} onClick={props.adding}>More</button>\n        </div>\n    )\n}\n\nexport default buildControl;","import React from 'react'\nimport classes from './BuildControls.css'\nimport BuildControl from './BuildControl/BuildControl'\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n]\n\nconst buildControls = (props) => {\n    return (\n        <div className={classes.BuildControls}>\n            <p>Current Price: <strong>${props.price}</strong></p>\n            {\n                controls.map(each =>\n                    <BuildControl key={each.label}\n                        label={each.label}\n                        adding={() => props.adding(each.type)}\n                        removing={() => props.removing(each.type)}\n                        disabled={props.disabledInfo[each.type]}></BuildControl>\n                )\n            }\n            <button className={classes.OrderButton} disabled={!props.canOrder} onClick={props.ordering}>Order Now</button>\n        </div >\n    )\n}\n\nexport default buildControls;","import React, { Component } from 'react'\nimport classes from './Modal.css'\nimport Aux from '../../../hoc/Aux'\nimport Backdrop from '../Backdrop/Backdrop'\n\nclass modal extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if(nextProps.show !== this.props.show || nextProps.children !== this.props.children){\n            return true;\n        } else {return false}\n    }\n    render(){\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} hide={this.props.hide}></Backdrop>\n                <div className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n    \n            </Aux>\n        )\n    }\n}\n\nexport default modal","import React from 'react'\nimport classes from './Button.css'\n\nconst button = (props) => (\n    <button className={[classes.Button, classes[props.btnType]].join(' ')} \n            onClick={props.clicked}>\n        {props.children}\n    </button>\n)\n\nexport default button","import React from 'react'\nimport Aux from '../../../hoc/Aux'\nimport Button from '../../UI/Button/Button'\n\nconst orderSummary = (props)=>{\n    const ingredientSummary = Object.keys(props.ingredients)\n                                    .map(eachIngredient =>{\n                                        return <li key={eachIngredient}>{eachIngredient}: {props.ingredients[eachIngredient]}</li>\n                                    });\n    return(\n        <Aux>\n            <h3>Your order:</h3>\n            <p>A delicious burger with the following ingredients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p>Total price: <strong>${props.price}</strong></p>\n            <p>Continue to checkout?</p>\n            <Button clicked={props.cancel} btnType=\"Danger\">Cancel</Button>\n            <Button clicked={props.continue} btnType=\"Success\">Continue</Button>\n        </Aux>\n    )\n}\n\nexport default orderSummary","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://burgerbuilderwithreact.firebaseio.com/'\n})\n\nexport default instance","import React from 'react'\nimport classes from './Spinner.css'\n\nconst spinner = ()=>(\n    <div className={classes.Loader}>Loading...</div>\n)\n\nexport default spinner","import React, { Component } from 'react'\nimport Aux from '../../hoc/Aux'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport axios from '../../axios-order'\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.5,\n    meat: 1,\n    bacon: 1\n}\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: null,\n        totalPrice: 4,\n        canOrder: false,\n        ordering: false,\n        loading: false\n    }\n\n    componentDidMount() {\n        axios.get('/ingredients.json')\n            .then(res => {\n                this.setState({ingredients: res.data});\n            })\n    }\n    addIngredient = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = { ...this.state.ingredients };\n        updatedIngredients[type] = updatedCount;\n\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n\n        this.setState({ ingredients: updatedIngredients, totalPrice: newPrice });\n        this.updateCanOrder(updatedIngredients);\n    }\n    removeIngredient = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0) {\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = { ...this.state.ingredients };\n        updatedIngredients[type] = updatedCount;\n\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n\n        this.setState({ ingredients: updatedIngredients, totalPrice: newPrice });\n        this.updateCanOrder(updatedIngredients);\n    }\n    updateCanOrder = (ingredients) => {\n        const sum = Object.keys(ingredients)\n            .map(eachIngredient => { return ingredients[eachIngredient] })\n            .reduce((sum, eachQuantity) => {\n                return sum + eachQuantity;\n            }, 0);\n        this.setState({ canOrder: sum > 0 });\n    }\n    order = () => {\n        this.setState({ ordering: true })\n    }\n    hide = () => {\n        this.setState({ ordering: false })\n    }\n    continue = () => {\n        let queryParams= [];\n        for(let each in this.state.ingredients) {\n            queryParams.push(encodeURIComponent(each)+'='+encodeURIComponent(this.state.ingredients[each]))\n        }\n        queryParams.push('price='+this.state.totalPrice)\n        let queryString = queryParams.join('&')\n        this.props.history.push({\n            pathname:'/React-BurgerBuilder/checkout',\n            search: '?'+ queryString\n        })\n\n        // DIRECTLY TO FIREBASE\n        // const order = {\n        //     ingredients: this.state.ingredients,\n        //     price: this.state.totalPrice,\n        //     customer: {\n        //         name: 'Marina',\n        //         address: {\n        //             street: '5535 Love St',\n        //             zipCode: '71251',\n        //             country: 'USA',\n        //         },\n        //         email: 'marina@outlook.com',\n        //     },\n        //     deliverMethod: 'fastest'\n        // }\n        // this.setState({ loading: true })\n        // axios.post('/orders.json', order)\n        //     .then(res => { this.setState({ loading: false }); this.hide() })\n        //     .catch(err => this.setState({ loading: false }))\n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for (let each in disabledInfo) {\n            disabledInfo[each] = disabledInfo[each] <= 0;\n        }\n        let orderSummary = null;\n        let burger = <Spinner></Spinner>;\n\n        if (this.state.ingredients) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.state.ingredients}></Burger>\n                    <BuildControls adding={this.addIngredient}\n                        removing={this.removeIngredient}\n                        disabledInfo={disabledInfo}\n                        price={this.state.totalPrice}\n                        canOrder={this.state.canOrder}\n                        ordering={this.order}>\n                    </BuildControls>\n                </Aux>\n            );\n            orderSummary = <OrderSummary ingredients={this.state.ingredients}\n                cancel={this.hide}\n                continue={this.continue}\n                price={this.state.totalPrice}>\n            </OrderSummary>\n        }\n\n        if (this.state.loading) {\n            orderSummary = <Spinner />\n        }\n\n\n        return (\n            <Aux>\n                <Modal show={this.state.ordering} hide={this.hide}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        )\n    }\n}\n\nexport default BurgerBuilder;","import React from 'react'\nimport Burger from '../../Burger/Burger'\nimport Button from '../../UI/Button/Button'\nimport classes from './CheckoutSummary.css'\n\n//need props.ingredients\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes good</h1>\n            <div style= {{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients}></Burger>\n            </div>\n            <Button \n                btnType='Danger'\n                clicked={props.cancel}>Cancel</Button>\n            <Button \n                btnType='Success'\n                clicked={props.continue}>Continue</Button>\n        </div>\n    )\n}\n\nexport default checkoutSummary","import React from 'react'\nimport classes from './Input.css'\n\nconst input = (props) => {\n    // console.log(props)\n    let inputElement = null;\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input \n                onChange={props.changed}\n                className={classes.InputElement} \n                {...props.elementConfig} \n                value={props.value}></input>\n            break;\n        case ('textarea'):\n            inputElement = <textarea \n                onChange={props.changed}\n                className={classes.InputElement} \n                {...props.elementConfig} \n                value={props.value}/>\n            break;\n        case ('select'):\n            inputElement = (\n                <select \n                    onChange={props.changed}\n                    className={classes.InputElement} \n                    value={props.value}>\n                        {props.elementConfig.options.map(option => (\n                            <option\n                                key={option.value} \n                                value={option.value}>{option.displayValue}</option>\n                        ))}\n                </select>)\n            break;\n        default:\n            inputElement = <input \n                onChange={props.changed}\n                className={classes.InputElement} \n                {...props.elementConfig} \n                value={props.value}></input>\n    }\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    )\n}\n\nexport default input","import React, { Component } from 'react'\nimport Button from '../../../components/UI/Button/Button'\nimport Spinners from '../../../components/UI/Spinner/Spinner'\nimport classes from './ContactData.css'\nimport axios from '../../../axios-order'\nimport Input from '../../../components/UI/Input/Input'\nclass ContactData extends Component {\n    state = {\n        orderForm:{\n            name:{\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your name'\n                },\n                value: ''\n            },\n            address: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Address'\n                },\n                value: ''\n            },\n            zipcode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Zipcode'\n                },\n                value: ''\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: ''\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your email'\n                },\n                value: ''\n            },\n            deliverMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'},\n                    ]\n                },\n                value: ''\n            }\n        },\n        loading: false,\n\n    }\n\n    inputChanged = (event, inputIdentifier)=>{\n        const updatedOrderForm ={\n            ...this.state.orderForm\n        }\n        const updatedForm = {...updatedOrderForm[inputIdentifier]};\n        updatedForm.value = event.target.value;\n        updatedOrderForm[inputIdentifier] = updatedForm;\n        this.setState({orderForm: updatedOrderForm})\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault()\n        const formData = {};\n        for(let formElementName in this.state.orderForm){\n            formData[formElementName] = this.state.orderForm[formElementName].value;\n        }\n        const order = {\n            ingredients: this.props.ingredients,\n            price: this.props.totalPrice,\n            orderData: formData\n        }\n        this.setState({ loading: true })\n        axios.post('/orders.json', order)\n            .then(res => { this.setState({ loading: false }); this.props.history.push('/React-BurgerBuilder/') })\n            .catch(err => this.setState({ loading: false }))\n    }\n    render() {\n        const formElementsArray = [];\n        for(let key in this.state.orderForm){\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            })\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        changed={(event)=>this.inputChanged(event, formElement.id)}></Input>\n                ))}\n                \n                <Button btnType=\"Success\">Order</Button>\n            </form>\n        );\n        if (this.state.loading) {\n            form = <Spinners></Spinners>\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your contact information</h4>\n                {form}\n            </div>\n        )\n    }\n\n}\n\nexport default ContactData;","import React, { Component } from 'react'\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\nimport queryString from 'query-string'\nimport { Route } from 'react-router-dom'\nimport ContactData from '../../containers/Checkout/ContactData/ContactData'\n\nclass Checkout extends Component {\n    state = {\n        ingredients: {},\n        totalPrice: 0\n    }\n    componentDidMount(){\n        let query = queryString.parse(this.props.location.search);\n        let ingredients = {...query};\n        delete ingredients.price;\n        this.setState({ingredients: ingredients, totalPrice: query.price});\n    }\n    cancel = () => {\n        this.props.history.goBack();\n    }\n    continue = () => {\n        this.props.history.replace('/React-BurgerBuilder/checkout/contact-data');\n    }\n    render() {\n        return (\n            <div>\n                <CheckoutSummary \n                    ingredients={this.state.ingredients} \n                    cancel={this.cancel} \n                    continue={this.continue}></CheckoutSummary>\n                <Route \n                    path={this.props.match.path + '/contact-data'} \n                    render={(props)=><ContactData ingredients={this.state.ingredients} totalPrice={this.state.totalPrice} {...props}></ContactData>}/>\n            </div>\n        )\n    }\n}\n\nexport default Checkout\n","import React from 'react'\nimport classes from './Order.css'\n\nconst Order = (props) => {\n    const ingredientsObject = [];\n    for (let ingredient in props.ingredients) {\n        ingredientsObject.push({ ig: ingredient, amount: props.ingredients[ingredient] })\n    }\n\n    let ingredients = ingredientsObject.map(ig => {\n        return <span \n                    key={ig.ig}\n                    style={{\n                        textTransform: 'capitalize',\n                        display: 'inline-block',\n                        margin: '0 8px',\n                        border: '1px solid #ccc',\n                        padding: '5px'\n                        }}>{ig.ig}({ig.amount}) </span>\n    })\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredients}</p>\n            <p>Price: <strong>${props.price}</strong></p>\n        </div>\n    )\n}\nexport default Order","import React, { Component } from 'react'\nimport axios from '../../axios-order'\nimport Order from '../Orders/Order/Order'\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true,\n    }\n    componentDidMount() {\n        axios.get('./orders.json')\n            .then(res => {\n                const fetchedOrders = [];\n                for (let key in res.data) {\n                    fetchedOrders.push({ ...res.data[key], id: key });\n                }\n                this.setState({ loading: false, orders: fetchedOrders });\n            })\n            .catch(err => {\n                this.setState({ loading: false })\n            })\n    }\n    render() {\n        return (\n            <div>\n                {this.state.orders.map(order =>\n                    <Order \n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price}></Order>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default Orders","import React from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout'\nimport { Route } from 'react-router-dom'\nimport Orders from './containers/Orders/Orders'\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Route path=\"/React-BurgerBuilder\" exact component={BurgerBuilder} />\n        <Route path=\"/React-BurgerBuilder/checkout\" component={Checkout} />\n        <Route path=\"/React-BurgerBuilder/orders\" component={Orders} />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\nReactDOM.render( app , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}